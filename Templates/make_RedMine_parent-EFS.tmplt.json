{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template coordinates the running of the RedMine Security-group, EFS, RDS, S3 and IAM templates.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Child Template URLs"
          },
          "Parameters": [
            "SgTemplateUri",
            "EfsTemplateUri",
            "RdsTemplateUri",
            "BucketTemplateUri",
            "IamTemplateUri"
          ]
        },
        {
          "Label": {
            "default": "Database Parameters"
          },
          "Parameters": [
            "DbInstanceType",
            "DbDataSize",
            "DbNodeName",
            "DbInstanceName",
            "DbAdminName",
            "DbAdminPass"
          ]
        },
        {
          "Label": {
            "default": "Miscellaneous"
          },
          "Parameters": [
            "ServiceTld",
            "TargetVPC",
            "HaSubnets"
          ]
        }
      ],
      "ParameterLabels": {
        "BucketTemplateUri": {
          "default": "S3 Buckets"
        },
        "EfsTemplateUri": {
          "default": "EFS Shares"
        },
        "IamTemplateUri": {
          "default": "IAM Roles"
        },
        "RdsTemplateUri": {
          "default": "RDS Database"
        },
        "RedMineShareType": {
          "default": "Share Server Type"
        },
        "SgTemplateUri": {
          "default": "Security Groups"
        }
      }
    }
  },
  "Outputs": {},
  "Parameters": {
    "BucketTemplateUri": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL to the child-template for creating the GitLab S3 bucket(s) IAM roles.",
      "Type": "String"
    },
    "DbAdminName": {
      "Description": "Name of the Artifactory master database-user.",
      "Type": "String"
    },
    "DbAdminPass": {
      "Description": "Password of the Artifactory master database-user.",
      "NoEcho": "True",
      "Type": "String"
    },
    "DbDataSize": {
      "ConstraintDescription": "Must be between 5GB and 16384GB.",
      "Default": "5",
      "Description": "Size in GiB of the RDS table-space to create. (UNUSED: present for compatibility-reasons only)",
      "MaxValue": "16384",
      "MinValue": "5",
      "Type": "Number"
    },
    "DbInstanceName": {
      "Description": "Instance-name of the RedMine database.",
      "MaxLength": "8",
      "Type": "String"
    },
    "DbInstanceType": {
      "AllowedValues": [
        "db.t2.small",
        "db.t2.medium",
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge",
        "db.r4.4xlarge",
        "db.r4.8xlarge",
        "db.r4.16xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge"
      ],
      "Default": "db.t2.small",
      "Description": "Amazon RDS instance type",
      "Type": "String"
    },
    "DbIsMultiAz": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "false",
      "Description": "Select whether to create a multi-AZ RDS deployment. (UNUSED: present for compatibility-reasons only)",
      "Type": "String"
    },
    "DbNodeName": {
      "Description": "NodeName of the RedMine database.",
      "Type": "String"
    },
    "EfsTemplateUri": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL to the child-template for creating the GitLab EFS shares.",
      "Type": "String"
    },
    "HaSubnets": {
      "Description": "Select three subnets - each from different Availability Zones.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "IamTemplateUri": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL to the child-template for creating the GitLab S3 bucket(s) IAM roles.",
      "Type": "String"
    },
    "InstanceCount": {
      "Default": "2",
      "Description": "Number of cluster-nodes to deploy",
      "MaxValue": "4",
      "MinValue": "1",
      "Type": "Number"
    },
    "MysqlVersion": {
      "AllowedValues": [
        "5.7.19",
        "5.7.17",
        "5.7.16",
        "5.6.37",
        "5.6.35",
        "5.6.34",
        "5.6.29",
        "5.6.26",
        "5.5.57",
        "5.5.54",
        "5.5.53",
        "5.5.46"
      ],
      "Default": "5.7.19",
      "Description": " The X.Y.Z version of the MySQL database to deploy. (UNUSED: present for compatibility-reasons only)",
      "Type": "String"
    },
    "RdsTemplateUri": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL to the child-template for creating the GitLab RDS database.",
      "Type": "String"
    },
    "RolePrefix": {
      "Description": "Prefix to apply to IAM role to make things a bit prettier (optional).",
      "Type": "String"
    },
    "ServiceTld": {
      "Default": "amazonaws.com",
      "Description": "TLD of the IAMable service-name.",
      "Type": "String"
    },
    "SgTemplateUri": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL to the child-template for creating the GitLab security-groups.",
      "Type": "String"
    },
    "TargetVPC": {
      "AllowedPattern": "^vpc-[0-9a-f]*$",
      "Description": "ID of the VPC to deploy RedMine components into.",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Resources": {
    "Ec2Res": {
      "Properties": {
        "AdminPubkeyURL": { "Ref": "AdminPubkeyURL" },
        "AmiDistro": { "Ref": "AmiDistro" },
        "AmiId": { "Ref": "AmiId" },
        "AppVolumeDevice": { "Ref": "AppVolumeDevice" },
        "AppVolumeMountPath": { "Ref": "AppVolumeMountPath" },
        "AppVolumeSize": { "Ref": "AppVolumeSize" },
        "AppVolumeType": { "Ref": "AppVolumeType" },
        "CfnEndpointUrl": { "Ref": "CfnEndpointUrl" },
        "CfnResourceBucket": { "Ref": "CfnResourceBucket" },
        "RedMineAppPrepUrl": { "Ref": "RedMineAppPrepUrl" },
        "RedMineBinaryInstallerUrl": { "Ref": "RedMineBinaryInstallerUrl" },
        "RedMineOsPrepUrl": { "Ref": "RedMineOsPrepUrl" },
        "RedMineProxyFqdn": { "Ref": "RedMineProxyFqdn" },
        "RedMineSharePath": { "Ref": "RedMineSharePath" },
        "RedMineShareType": { "Ref": "RedMineShareType" },
        "DbAdminName": { "Ref": "DbAdminName" },
        "DbAdminPass": { "Ref": "DbAdminPass" },
        "DbFqdn": { "Ref": "" },
        "DbInstanceName": { "Ref": "DbInstanceName" },
        "Domainname": { "Ref": "Domainname" },
        "EpelRepo": { "Ref": "EpelRepo" },
        "Hostname": { "Ref": "Hostname" },
        "InstanceRole": { "Ref": "" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyPairName": { "Ref": "KeyPairName" },
        "NoPublicIp": { "Ref": "NoPublicIp" },
        "NoReboot": { "Ref": "NoReboot" },
        "NoUpdates": { "Ref": "NoUpdates" },
        "PipRpm": { "Ref": "PipRpm" },
        "PrivateIp": { "Ref": "PrivateIp" },
        "ProvisionUser": { "Ref": "ProvisionUser" },
        "PyStache": { "Ref": "PyStache" },
        "PipIndexFips": { "Ref": "PipIndexFips" },
        "SecurityGroupIds": { "Ref": "" },
        "SubnetId": { "Ref": "SubnetId" },
        "WatchmakerConfig": { "Ref": "WatchmakerConfig" },
        "WatchmakerEnvironment": { "Ref": "dev" }
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "EfsRes": {
      "Properties": {
        "Parameters": {
          "EfsSg": {
            "Fn::GetAtt": [
              "SgRes",
              "Outputs.NasSg"
            ]
          },
          "EfsSubnet": {
            "Fn::Join": [
              ",",
              {
                "Ref": "HaSubnets"
              }
            ]
          },
          "ServiceTld": {
            "Ref": "ServiceTld"
          }
        },
        "TemplateURL": {
          "Ref": "EfsTemplateUri"
        }
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "IamRes": {
      "Properties": {
        "Parameters": {
          "BackupBucketArn": {
            "Fn::GetAtt": [
              "S3Res",
              "Outputs.BucketArn"
            ]
          },
          "RolePrefix": {
            "Ref": "RolePrefix"
          },
          "ServiceTld": {
            "Ref": "ServiceTld"
          }
        },
        "TemplateURL": {
          "Ref": "IamTemplateUri"
        },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "RdsRes": {
      "Properties": {
        "Parameters": {
          "DbAdminName": {
            "Ref": "DbAdminName"
          },
          "DbAdminPass": {
            "Ref": "DbAdminPass"
          },
          "DbDataSize": {
            "Ref": "DbDataSize"
          },
          "DbInstanceName": {
            "Ref": "DbInstanceName"
          },
          "DbInstanceType": {
            "Ref": "DbInstanceType"
          },
          "DbIsMultiAz": "true",
          "DbNodeName": {
            "Ref": "DbNodeName"
          },
          "DbSecurityGroup": {
            "Fn::GetAtt": [
              "SgRes",
              "Outputs.RdsSg"
            ]
          },
          "DbSubnets": {
            "Fn::Join": [
              ",",
              {
                "Ref": "HaSubnets"
              }
            ]
          },
          "InstanceCount": {
            "Ref": "InstanceCount"
          },
          "MysqlVersion": {
            "Ref": "MysqlVersion"
          },
          "TargetVPC": {
            "Ref": "TargetVPC"
          }
        },
        "TemplateURL": {
          "Ref": "RdsTemplateUri"
        }
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "S3Res": {
      "Properties": {
        "TemplateURL": {
          "Ref": "BucketTemplateUri"
        },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    },
    "SgRes": {
      "Properties": {
        "Parameters": {
          "TargetVPC": {
            "Ref": "TargetVPC"
          }
        },
        "TemplateURL": {
          "Ref": "SgTemplateUri"
        },
        "TimeoutInMinutes": "10"
      },
      "Type": "AWS::CloudFormation::Stack"
    }
  }
}
