{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "AssignProxyPrettyName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            { "Ref": "ProxyPrettyName" },
            ""
          ]
        }
      ]
    }
  },
  "Description": "Template for creating an internet-facing ALB through which users can connect to the RedMine web-service.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": [
            "ProxyPrettyName",
            "TargetVPC",
            "HaSubnets",
            "SecurityGroupIds",
            "RedmineListenPort",
            "RedmineServicePort",
            "RedmineListenerCert"
          ]
        }
      ]
    }
  },
  "Outputs": {
    "RedmineAlbFqdn": {
      "Description": "RedMine front-end's IP address",
      "Export": {
        "Name" : { "Fn::Sub": "${AWS::StackName}-AlbDnsName" }
      },
      "Value": { "Fn::GetAtt": [ "RedminePubAlbLoadBalancer", "DNSName" ] }
    },
    "RedmineAlbTgroupArn": {
      "Description": "ARN of the Redmine ALB's TargetGroup",
      "Export": {
        "Name" : { "Fn::Sub": "${AWS::StackName}-AlbTargArn" }
      },
      "Value": { "Ref": "RedminePubAlbTgroup" }
    }
  },
  "Parameters": {
    "BackendTimeout": {
      "Default": "600",
      "Description": "How long - in seconds - back-end connection may be idle before attempting session-cleanup",
      "MinValue": "60",
      "MaxValue": "3600",
      "Type": "Number"
    },
    "HaSubnets": {
      "Description": "Select three subnets - each from different Availability Zones.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "ProxyPrettyName": {
      "Description": "A short, human-friendly label to assign to the ELB (no capital letters).",
      "Type": "String"
    },
    "SecurityGroupIds": {
      "Description": "List of security groups to apply to the ELB.",
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "RedmineListenerCert": {
      "Default": "",
      "Description": "Name/ID of the ACM-managed SSL Certificate to protect public listener.",
      "Type": "String"
    },
    "RedmineListenPort": {
      "Default": "443",
      "Description": "TCP Port number on which the RedMine ELB listens for requests.",
      "MaxValue": "65535",
      "MinValue": "1",
      "Type": "Number"
    },
    "RedmineServicePort": {
      "Default": "80",
      "Description": "TCP Port number that the RedMine host listens to.",
      "MaxValue": "65535",
      "Type": "Number"
    },
    "TargetVPC": {
      "AllowedPattern": "^vpc-[0-9a-f]*$",
      "Description": "ID of the VPC to deploy cluster nodes into.",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Resources": {
    "RedminePubAlbListener": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  { "Ref": "AWS::Partition" },
                  ":acm:",
                  { "Ref": "AWS::Region" },
                  ":",
                  { "Ref": "AWS::AccountId" },
                  ":",
                  "certificate/",
                  { "Ref": "RedmineListenerCert" }
                ]
              ]
            }
          }
        ],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "RedminePubAlbTgroup" }
          }
        ],
        "LoadBalancerArn": { "Ref": "RedminePubAlbLoadBalancer" },
        "Port": { "Ref": "RedmineListenPort" },
        "Protocol": "HTTPS"
      },
      "Type" : "AWS::ElasticLoadBalancingV2::Listener"
    },
    "RedminePubAlbLoadBalancer": {
      "Properties": {
        "Name": {
          "Fn::If": [
            "AssignProxyPrettyName",
              { "Ref": "ProxyPrettyName" },
              { "Ref": "AWS::NoValue" }
          ]
        },
        "Scheme": "internet-facing",
        "SecurityGroups": { "Ref": "SecurityGroupIds" },
        "Subnets": { "Ref": "HaSubnets" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "RedMine front-end ALB"
          }
        ],
        "Type": "application"
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
    },
    "RedminePubAlbTgroup": {
      "Properties": {
        "HealthCheckPath": "/ELBtest.txt",
        "HealthyThresholdCount": "5",
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Ref": "AWS::StackName"
                      }
                    ]
                  }
                ]
              },
              "TargetGroup"
            ]
          ]
        },
        "Port": { "Ref": "RedmineServicePort" },
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key" : "stickiness.enabled",
            "Value" : "true"
          }
        ],
        "UnhealthyThresholdCount": "2",
        "VpcId": { "Ref": "TargetVPC" }
      },
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup"
    }
  }
}
